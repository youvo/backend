<?php

/**
 * @file
 * Provides hooks to document progress in academy.
 */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Access\AccessResultInterface;
use Drupal\Core\Entity\ContentEntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Session\AccountInterface;
use Drupal\progress\ComputedFieldStorageDefinition;
use Drupal\progress\Plugin\Field\CompletedFieldItemList;
use Drupal\progress\Plugin\Field\EvaluationFieldItemList;
use Drupal\progress\Plugin\Field\ProgressFieldItemList;
use Drupal\progress\Plugin\Field\UnlockedFieldItemList;

/**
 * Implements hook_entity_base_field_info().
 */
function progress_entity_base_field_info(EntityTypeInterface $entity_type) {

  $fields = [];

  // Add paragraphs base field to entity Lecture and Course.
  if ($entity_type->id() == 'lecture' || $entity_type->id() == 'course') {
    $fields['completed'] = BaseFieldDefinition::create('cacheable_boolean_item')
      ->setLabel(t('Completed'))
      ->setDescription(t('Computes the completed status by user.'))
      ->setComputed(TRUE)
      ->setClass(CompletedFieldItemList::class);
    $fields['unlocked'] = BaseFieldDefinition::create('cacheable_boolean_item')
      ->setLabel(t('Unlocked'))
      ->setDescription(t('Computes the unlocked status by user.'))
      ->setComputed(TRUE)
      ->setClass(UnlockedFieldItemList::class);
  }

  // Add paragraphs base field to entity Course.
  if ($entity_type->id() == 'course') {
    $fields['progress'] = BaseFieldDefinition::create('cacheable_integer_item')
      ->setLabel(t('Progress'))
      ->setDescription(t('Computes the progress status by user.'))
      ->setComputed(TRUE)
      ->setClass(ProgressFieldItemList::class);
  }

  return $fields;
}

/**
 * Implements hook_entity_bundle_field_info().
 */
function progress_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {

  $fields = [];

  // Add computed evaluation field to evaluation paragraphs.
  if ($entity_type->id() == 'paragraph' && $bundle == 'evaluation') {
    // It is not a basefield, so we need a custom field storage definition see
    // https://www.drupal.org/project/drupal/issues/2346347#comment-12206126
    $fields['evaluation'] = ComputedFieldStorageDefinition::create('map')
      ->setLabel(t('Course Evaluation'))
      ->setDescription(t('Computes the evaluation of a course.'))
      ->setComputed(TRUE)
      ->setClass(EvaluationFieldItemList::class)
      ->setTargetEntityTypeId($entity_type->id())
      ->setTargetBundle($bundle);
  }

  return $fields;
}

/**
 * Implements hook_child_entities_check_access().
 *
 * @see \Drupal\child_entities\ChildEntityAccessControlHandler
 */
function progress_child_entities_check_access(AccessResultInterface &$access, ContentEntityInterface $origin, AccountInterface $account) {

  // Check enrollment status. Therefore, from an access point of view, all
  // contents of the course are revealed once a user enrolls into a course.
  if ($access->isAllowed()) {
    $access = AccessResult::allowedIf(\Drupal::service('progress.manager')
      ->isUnlocked($origin, $account));
  }
}
