<?php

/**
 * @file
 * Implements install hook. Grants permissions to certain roles.
 */

use Drupal\Core\Entity\EntityStorageException;
use Drupal\user\Entity\Role;
use Drupal\Core\Utility\Error;

/**
 * Implements hook_site_install_finished().
 *
 * @see https://www.drupal.org/project/drupal/issues/2924549
 */
function courses_site_install_finished($install_state) {

  // View courses.
  $roles = ['creative', 'editor', 'observer', 'manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('view courses');
    try {
      $role_object->save();
    }
    catch (EntityStorageException $e) {
      $variables = Error::decodeException($e);
      $variables['%permission'] = 'view courses';
      $variables['%role'] = $role;
      \Drupal::logger('courses')
        ->error('Unable to grant permission %permission to role %role. %type: @message in %function (line %line of %file).', $variables);
    }
  }

  // Edit courses.
  $role_object = Role::load('editor');
  $role_object->grantPermission('manage courses');
  try {
    $role_object->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    $variables['%permission'] = 'manage courses';
    $variables['%role'] = 'editor';
    \Drupal::logger('courses')
      ->error('Unable to grant permission %permission to role %role. %type: @message in %function (line %line of %file).', $variables);
  }

}
