<?php

/**
 * @file
 * Alterations for paragraph entity.
 *
 * This module does not define a new quiz entity. A quiz is a paragraph entity
 * or more explicitly a type of paragraph entity. We use the following hooks
 * to implement alterations to extend paragraphs for quizzes.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Implements hook_entity_type_alter().
 */
function quizzes_entity_type_alter(array &$entity_types) {
  // We alter the default paragraph.{add,edit,delete} form handlers in order
  // to load a different class than the standard add-, edit- and delete form for
  // paragraphs.
  $entity_types['paragraph']->setFormClass('add', 'Drupal\\quizzes\\Form\\ParagraphWithQuizForm');
  $entity_types['paragraph']->setFormClass('edit', 'Drupal\\quizzes\\Form\\ParagraphWithQuizForm');
}

/**
 * Implements hook_ENTITY_TYPE_predelete().
 *
 * Removes all referenced question entities.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function quizzes_paragraph_predelete(EntityInterface $entity) {
  /** @var \Drupal\paragraphs\Entity\Paragraph $entity */
  if ($entity->bundle() === 'quiz') {
    /** @var \Drupal\quizzes\Entity\Question[] $questions */
    $questions_reference = $entity->get('field_questions')->getValue();
    $question_ids = array_column($questions_reference, 'target_id');
    $questions = \Drupal::entityTypeManager()->getStorage('question')->loadMultiple($question_ids);
    foreach ($questions as $question) {
      $question->delete();
    }
  }
}
