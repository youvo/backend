<?php

/**
 * @file
 * Install, update and uninstall functions for the youvo_dummy module.
 */

use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\Component\Utility\Random;
use Drupal\file\Entity\File;
use Drupal\user\Entity\User;
use Drupal\Core\Utility\Error;

/**
 * Implements hook_install().
 */
function youvo_dummy_install() {
  module_set_weight('youvo_dummy', 1);
}

/**
 * Implements hook_site_install_finished().
 *
 * @see https://www.drupal.org/project/drupal/issues/2924549
 */
function youvo_dummy_site_install_finished() {

  // Object for random content.
  $random = new Random();

  // Values for creative user.
  $image_file = youvo_dummy_get_image_by_path('/img/test_images/portrait/', 'paula.jpg');
  $values = [
    'field_avatar' => $image_file->id(),
    'field_name' => 'Fredolina Tonito',
    'field_position' => 'Treppenstufenlauscherin',
    'field_linkedin' => 'fredatonito',
    'field_xing' => 'fredatonito',
    'field_about' => rtrim($random->paragraphs(2)),
    'field_skills' => youvo_dummy_get_random_skills(),
    'name' => 'hello@youvo.org',
    'mail' => 'hello@youvo.org',
    'roles' => ['creative'],
    'pass' => 'admin',
    'status' => 1,
  ];

  // Create creative.
  $creative = User::create($values);
  try {
    $creative->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo_dummy')
      ->error('An error occurred while creating dummy creative. %type: @message in %function (line %line of %file).', $variables);
  }

  // Values for creative user.
  $image_file = youvo_dummy_get_image_by_path('/img/test_images/portrait/', 'anne.jpg');
  $values = [
    'field_avatar' => $image_file->id(),
    'field_name' => 'Alexandria Frezza',
    'field_position' => 'Hebelwirkungstesterin',
    'field_linkedin' => 'alexfrezza',
    'field_xing' => 'alexfrezza',
    'field_about' => rtrim($random->paragraphs(2)),
    'field_skills' => youvo_dummy_get_random_skills(),
    'name' => 'alexandria@youvo.org',
    'mail' => 'alexandria@youvo.org',
    'roles' => ['creative'],
    'pass' => 'admin',
    'status' => 1,
  ];

  // Create creative.
  $creative = User::create($values);
  try {
    $creative->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo_dummy')
      ->error('An error occurred while creating dummy creative. %type: @message in %function (line %line of %file).', $variables);
  }

  // Values for creative user.
  $image_file = youvo_dummy_get_image_by_path('/img/test_images/portrait/', 'frank.jpg');
  $values = [
    'field_avatar' => $image_file->id(),
    'field_name' => 'Frechie Daxon',
    'field_position' => 'Laternenbetrachter',
    'field_linkedin' => 'fredaxon',
    'field_xing' => 'fredaxon',
    'field_about' => rtrim($random->paragraphs(2)),
    'field_skills' => youvo_dummy_get_random_skills(),
    'name' => 'frechie@youvo.org',
    'mail' => 'frechie@youvo.org',
    'roles' => ['creative'],
    'pass' => 'admin',
    'status' => 1,
  ];

  // Create creative.
  $creative = User::create($values);
  try {
    $creative->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo_dummy')
      ->error('An error occurred while creating dummy creative. %type: @message in %function (line %line of %file).', $variables);
  }

  // Values for organisation user.
  $image_file = youvo_dummy_get_image_by_path('/img/test_images/organisations/', 'test.jpg');
  $values = [
    'field_name' => 'BrÃ¼ckengeherInnen e.V.',
    'field_about' => rtrim($random->paragraphs(4)),
    'field_contact' => 'Helga Peickert',
    'field_avatar' => $image_file->id(),
    'name' => 'hello@brueckengehen.org',
    'mail' => 'hello@brueckengehen.org',
    'roles' => ['organisation'],
    'pass' => 'admin',
    'status' => 1,
  ];

  // Create organisation.
  $organisation = User::create($values);
  try {
    $organisation->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo_dummy')
      ->error('An error occurred while creating dummy organisation. %type: @message in %function (line %line of %file).', $variables);
  }

  // Values for organisation user.
  $values = [
    'field_name' => 'Vogelscheuchen Seelsorge e.V.',
    'field_about' => rtrim($random->paragraphs(4)),
    'field_contact' => 'Ursula Ursig',
    'field_avatar' => $image_file->id(),
    'name' => 'hello@vogelscheuchenseelsorge.org',
    'mail' => 'hello@vogelscheuchenseelsorge.org',
    'roles' => ['organisation'],
    'pass' => 'admin',
    'status' => 1,
  ];

  // Create organisation.
  $organisation = User::create($values);
  try {
    $organisation->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo_dummy')
      ->error('An error occurred while creating dummy organisation. %type: @message in %function (line %line of %file).', $variables);
  }

  // Values for organisation user.
  $values = [
    'field_name' => 'Ball-Luftdruck-Korrektiv',
    'field_about' => rtrim($random->paragraphs(4)),
    'field_contact' => 'Nadir Ongerer',
    'field_avatar' => $image_file->id(),
    'name' => 'hello@blk.gov',
    'mail' => 'hello@blk.gov',
    'roles' => ['organisation'],
    'pass' => 'admin',
    'status' => 1,
  ];

  // Create organisation.
  $organisation = User::create($values);
  try {
    $organisation->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo_dummy')
      ->error('An error occurred while creating dummy organisation. %type: @message in %function (line %line of %file).', $variables);
  }
}

/**
 * Returns skills array.
 */
function youvo_dummy_get_random_skills() {
  $skills = [];
  $skills_select = [1, 2, 3, 4, 5, 6];
  shuffle($skills_select);
  $skills_select = array_slice($skills_select, 0, rand(1, 3));
  foreach ($skills_select as $skill) {
    $skills[] = ['target_id' => $skill];
  }
  return $skills;
}

/**
 * Returns skills array.
 */
function youvo_dummy_get_random_causes() {
  $causes = [];
  /** @var \Drupal\taxonomy\Entity\Term[] $causes_select */
  try {
    $causes_select = \Drupal::entityTypeManager()
      ->getStorage('taxonomy_term')
      ->loadByProperties(['vid' => 'causes']);
  }
  catch (InvalidPluginDefinitionException | PluginNotFoundException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo_dummy')
      ->error('An error occurred while loading taxonomy terms. %type: @message in %function (line %line of %file).', $variables);
  }
  shuffle($causes_select);
  $causes_select = array_slice($causes_select, 0, rand(0, 2));
  foreach ($causes_select as $cause) {
    $causes[] = ['target_id' => $cause->id()];
  }
  return $causes;
}

/**
 * Returns stock image file.
 *
 * @param string $path
 *   Path to image.
 * @param string $file_name
 *   File name of image.
 *
 * @return \Drupal\file\Entity\File
 *   Image file.
 */
function youvo_dummy_get_image_by_path(string $path, string $file_name) {

  $image_path = drupal_get_path('module', 'youvo_dummy') . $path . $file_name;
  $public_path = Drupal::service('file_system')->copy($image_path, 'public://' . $file_name);
  $image_file = File::create([
    'uri' => $public_path,
    'uid' => 1,
    'status' => 1,
  ]);
  try {
    $image_file->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo_dummy')
      ->error('An error occurred while creating project images by path. %type: @message in %function (line %line of %file).', $variables);
  }

  return $image_file;
}

/**
 * Returns random creative id.
 *
 * @param array $creative_ids
 *   Array of creative ids.
 *
 * @return int
 *   Random creative id.
 */
function youvo_dummy_get_random_creative(array $creative_ids) {
  if (!empty($creative_ids)) {
    return $creative_ids[array_rand($creative_ids)];
  }
  else {
    return 0;
  }
}

/**
 * Returns random organisation id.
 *
 * @param array $organisation_ids
 *   Array of organisation ids.
 *
 * @return int
 *   Random organisation id.
 */
function youvo_dummy_get_random_organisation(array $organisation_ids) {
  if (!empty($organisation_ids)) {
    return $organisation_ids[array_rand($organisation_ids)];
  }
  else {
    return 0;
  }
}
