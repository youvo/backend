<?php

/**
 * @file
 * Install, update and uninstall functions for the youvo_dummy module.
 */

use Drupal\Core\Entity\EntityStorageException;
use Drupal\Component\Utility\Random;
use Drupal\file\Entity\File;
use Drupal\node\Entity\Node;
use Drupal\user\Entity\User;

/**
 * Implements hook_install().
 */
function youvo_dummy_install() {

  // Initialize.
  $creative_ids = [1];

  // Object for random content.
  $random = new Random();

  // Values for creative user.
  $image_file = youvo_dummy_get_image_by_path('/img/test_images/portrait/', 'paula.jpg');
  $values = [
    'field_avatar' => $image_file->id(),
    'field_name' => 'Fredolina Tonito',
    'field_position' => 'Treppenstufenlauscher',
    'field_linkedin' => 'fredatonito',
    'field_xing' => 'fredatonito',
    'field_about' => $random->paragraphs(2),
    'field_skills' => youvo_dummy_get_random_skills(),
    'name' => 'fredolina@youvo.org',
    'mail' => 'fredolina@youvo.org',
    'roles' => ['creative'],
    'pass' => 'drupal',
    'status' => 1,
  ];

  // Create creative.
  $creative = User::create($values);
  try {
    $creative->save();
    $creative_ids[] = $creative->id();
  }
  catch (EntityStorageException $e) {
    watchdog_exception('youvo_dummy', $e, 'An error occurred while creating dummy creative: "@message" in %function (line %line of %file).', ['@message' => $e->getMessage()]);
  }

  // Values for creative user.
  $image_file = youvo_dummy_get_image_by_path('/img/test_images/portrait/', 'anne.jpg');
  $values = [
    'field_avatar' => $image_file->id(),
    'field_name' => 'Alexandria Frezza',
    'field_position' => 'Hebelwirkungstesterin',
    'field_linkedin' => 'alexfrezza',
    'field_xing' => 'alexfrezza',
    'field_about' => $random->paragraphs(2),
    'field_skills' => youvo_dummy_get_random_skills(),
    'name' => 'alexandria@youvo.org',
    'mail' => 'alexandria@youvo.org',
    'roles' => ['creative'],
    'pass' => 'drupal',
    'status' => 1,
  ];

  // Create creative.
  $creative = User::create($values);
  try {
    $creative->save();
    $creative_ids[] = $creative->id();
  }
  catch (EntityStorageException $e) {
    watchdog_exception('youvo_dummy', $e, 'An error occurred while creating dummy creative: "@message" in %function (line %line of %file).', ['@message' => $e->getMessage()]);
  }

  // Values for creative user.
  $image_file = youvo_dummy_get_image_by_path('/img/test_images/portrait/', 'frank.jpg');
  $values = [
    'field_avatar' => $image_file->id(),
    'field_name' => 'Frechie Daxon',
    'field_position' => 'Laternenbetrachter',
    'field_linkedin' => 'fredaxon',
    'field_xing' => 'fredaxon',
    'field_about' => $random->paragraphs(2),
    'field_skills' => youvo_dummy_get_random_skills(),
    'name' => 'frechie@youvo.org',
    'mail' => 'frechie@youvo.org',
    'roles' => ['creative'],
    'pass' => 'drupal',
    'status' => 1,
  ];

  // Create creative.
  $creative = User::create($values);
  try {
    $creative->save();
    $creative_ids[] = $creative->id();
  }
  catch (EntityStorageException $e) {
    watchdog_exception('youvo_dummy', $e, 'An error occurred while creating dummy creative: "@message" in %function (line %line of %file).', ['@message' => $e->getMessage()]);
  }

  // Values for organisation user.
  $image_file = youvo_dummy_get_image_by_path('/img/test_images/organisations/', 'test.jpg');
  $values = [
    'field_name' => 'Test e.V.',
    'field_about' => $random->paragraphs(4),
    'field_contact' => 'Ursula Ursig',
    'field_avatar' => $image_file->id(),
    'name' => 'hello@testev.org',
    'mail' => 'hello@testev.org',
    'roles' => ['organisation'],
    'pass' => 'drupal',
    'status' => 1,
  ];

  // Create organisation.
  $organisation = User::create($values);
  try {
    $organisation->save();
  }
  catch (EntityStorageException $e) {
    watchdog_exception('youvo_dummy', $e, 'An error occurred while creating dummy organisation: "@message" in %function (line %line of %file).', ['@message' => $e->getMessage()]);
  }

  // Array of cycle states.
  $lifecycle_states = [
    'draft',
    'pending',
    'open',
    'ongoing',
    'finished',
  ];

  // Create random content.
  for ($i = 1; $i <= 24; $i++) {

    // Get field values.
    $skills = youvo_dummy_get_random_skills();
    // $image_file = youvo_dummy_get_random_image();
    $image_file = youvo_dummy_get_stock_image($i);

    // Set random time in last year.
    $current_time = Drupal::time()->getRequestTime();
    $one_year_ago = $current_time - 31536000;
    $rnd_time = rand($one_year_ago, $current_time);
    $date = Drupal::service('date.formatter')
      ->format($rnd_time, 'custom', 'Y-m-d');

    // Get random state.
    shuffle($lifecycle_states);
    $state = $lifecycle_states[0];

    // Create node with random information.
    $project = Node::create([
      'type' => 'project',
      'title' => ucwords($random->word(10) . ' ' . $random->word(6)),
      'body' => [
        'value' => $random->paragraphs(3),
        'summary' => $random->paragraphs(1),
      ],
      'langcode' => 'en',
      'uid' => $organisation->id(),
      'status' => 1,
      'field_workload' => rand(1, 5),
      'field_deadline' => $date,
      'field_city' => ucwords($random->word(12)),
      'field_material' => $random->sentences(4),
      'field_appreciation' => $random->sentences(8),
      'field_skills' => $skills,
      'field_image' => $image_file->id(),
      'field_lifecycle' => $state,
    ]);

    try {
      $project->save();
    }
    catch (EntityStorageException $e) {
      watchdog_exception('youvo_dummy', $e, 'An error occurred while creating dummy projects: "@message" in %function (line %line of %file).', ['@message' => $e->getMessage()]);
    }

    // Set random time in last year.
    $current_time = Drupal::time()->getRequestTime();
    $one_year_ago = $current_time - 31536000;
    $rnd_time = rand($one_year_ago, $current_time);

    // Set random states.
    /*
    $rnd = rand(0, 100);
    if ($rnd <= 20) {
    $project->setState('hidden');
    }
    $rnd = rand(0, 100);
    if ($rnd <= 10) {
    $project->setState('archived');
    }
    $rnd = rand(0, 100);
    if ($rnd <= 50) {
    $project->setState('highlighted');
    }*/
    // Set current state.
    // shuffle($cycle_states);
    // $state = $cycle_states[0];
    // $project->setState($state, $rnd_time);.
    // Set random timestamp for prior cycle states.
    //    while ($prior_state = $project->getPriorState($state)) {
    //      $cid = youvo_dummy_get_random_creative($creative_ids);
    //      // Set participant and host if brokered.
    //      if ($state == 'brokered') {
    //        $project->setParticipant($cid);
    //        $project->setHost($cid);
    //      }
    //      // Also create events in log.
    //      if (in_array($state, ['opened', 'brokered', 'finished'])) {
    //        $log = EventLog::create([
    //          'type' => 'project' . $state,
    //          'trigger' => $cid,
    //          'organisation' => $organisation->id(),
    //          'creative' => $cid,
    //          'project' => $project->id(),
    //          'status' => 1,
    //          'created' => $rnd_time,
    //          'changed' => $rnd_time,
    //        ]);
    //        try {
    //          $log->save();
    //        }
    //        catch (EntityStorageException $e) {
    //          watchdog_exception('youvo_dummy', $e, 'An error occurred while creating dummy logs: "@message" in %function (line %line of %file).', ['@message' => $e->getMessage()]);
    //        }
    //      }
    //      // Set new random time between current random time and one year ago.
    //      $rnd_time = rand($one_year_ago, $rnd_time);
    //      $project->setState($prior_state, $rnd_time);
    //      $state = $prior_state;
    //    }.
  }
}

/**
 * Returns skills array.
 */
function youvo_dummy_get_random_skills() {
  // Random skills.
  $skills = [];
  $skills_select = [1, 2, 3, 4, 5, 6];
  shuffle($skills_select);
  $skills_amount = rand(1, 3);
  $skills_select = array_slice($skills_select, 0, $skills_amount);
  foreach ($skills_select as $skill) {
    $skills[] = ['target_id' => $skill];
  }
  return $skills;
}

/**
 * Returns file of random image.
 */
function youvo_dummy_get_random_image() {

  // Object for random content.
  $random = new Random();

  // Generate random image and save to public file system.
  $random_img_name = $random->name(20);
  $image_path = $random->image('public://projects' .
    $random_img_name . '.png', '1024x768', '1024x768');
  $image_file = File::create([
    'uri' => $image_path,
    'uid' => 1,
    'status' => 1,
  ]);
  try {
    $image_file->save();
  }
  catch (EntityStorageException $e) {
    watchdog_exception('youvo_dummy', $e, 'An error occurred while creating random project images: "@message" in %function (line %line of %file).', ['@message' => $e->getMessage()]);
  }

  return $image_file;
}

/**
 * Returns stock image file.
 *
 * @param int $i
 *   Iteration index.
 *
 * @return \Drupal\file\Entity\File
 *   Image file.
 */
function youvo_dummy_get_stock_image(int $i) {

  $index = sprintf('%02d', (($i - 1) % 12) + 1);
  $image_path = drupal_get_path('module', 'youvo_dummy') . '/img/test_images/projects/' . $index . '.jpg';
  $public_path = Drupal::service('file_system')->copy($image_path, 'public://' . $index . '.jpg');
  $image_file = File::create([
    'uri' => $public_path,
    'uid' => 1,
    'status' => 1,
  ]);
  try {
    $image_file->save();
  }
  catch (EntityStorageException $e) {
    watchdog_exception('youvo_dummy', $e, 'An error occurred while creating stock project images.');
  }

  return $image_file;
}

/**
 * Returns stock image file.
 *
 * @param string $path
 *   Path to image.
 * @param string $file_name
 *   File name of image.
 *
 * @return \Drupal\file\Entity\File
 *   Image file.
 */
function youvo_dummy_get_image_by_path(string $path, string $file_name) {

  $image_path = drupal_get_path('module', 'youvo_dummy') . $path . $file_name;
  $public_path = Drupal::service('file_system')->copy($image_path, 'public://' . $file_name);
  $image_file = File::create([
    'uri' => $public_path,
    'uid' => 1,
    'status' => 1,
  ]);
  try {
    $image_file->save();
  }
  catch (EntityStorageException $e) {
    watchdog_exception('youvo_dummy', $e, 'An error occurred while creating project images by path.');
  }

  return $image_file;
}

/**
 * Returns random creative id.
 *
 * @param array $creative_ids
 *   Array of creative ids.
 *
 * @return int
 *   Random creative id.
 */
function youvo_dummy_get_random_creative(array $creative_ids) {
  if (!empty($creative_ids)) {
    return $creative_ids[array_rand($creative_ids)];
  }
  else {
    return 0;
  }
}
