<?php

/**
 * @file
 * Install, update and uninstall functions for the Projects module.
 */

use Drupal\user\Entity\Role;

/**
 * Implements hook_site_install_finished().
 *
 * @throws \Drupal\Core\Entity\EntityStorageException
 *
 * @see https://www.drupal.org/project/drupal/issues/2924549
 */
function projects_site_install_finished() {

  // View project.
  $role_object = Role::load('authenticated');
  $role_object->grantPermission('view project');
  $role_object->save();

  // Create projects.
  $roles = ['organization', 'manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('create project');
    $role_object->save();
  }

  // Edit and delete any project.
  $roles = ['manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('update any project');
    $role_object->grantPermission('delete any project');
    $role_object->save();
  }

  // Edit and delete own project.
  $role_object = Role::load('organization');
  $role_object->grantPermission('update own project');
  $role_object->grantPermission('delete own project');
  $role_object->save();

  // Use REST project action: Notify.
  $roles = ['manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('restful post project:notify');
    $role_object->save();
  }

  // Use REST project action: Apply.
  $role_object = Role::load('creative');
  $role_object->grantPermission('restful get project:apply');
  $role_object->grantPermission('restful post project:apply');
  $role_object->save();

  // Use REST project action: Comment.
  $roles = ['creative', 'organization', 'manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('restful get project:comment');
    $role_object->grantPermission('restful post project:comment');
    $role_object->save();
  }

  // Use REST project transition: Submit.
  $roles = ['organization', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('restful post project:submit');
    $role_object->save();
  }

  // Use REST project transition: Publish.
  $roles = ['manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('restful post project:publish');
    $role_object->save();
  }

  // Use REST project transition: Mediate.
  $roles = ['organization', 'manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('restful get project:mediate');
    $role_object->grantPermission('restful post project:mediate');
    $role_object->save();
  }

  // Use REST project transition: Complete.
  $roles = ['organization', 'manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('restful post project:complete');
    $role_object->save();
  }

  // Use REST project transition: Reset.
  $roles = ['supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('restful post project:reset');
    $role_object->save();
  }

  // Use project transitions for organization:
  // Submit - Mediate - Complete.
  $role_object = Role::load('organization');
  $role_object->grantPermission('use project_lifecycle transition submit');
  $role_object->grantPermission('use project_lifecycle transition mediate');
  $role_object->grantPermission('use project_lifecycle transition complete');
  $role_object->save();

  // Use project transitions for manager:
  // Publish - Mediate - Complete.
  $role_object = Role::load('manager');
  $role_object->grantPermission('use project_lifecycle transition publish');
  $role_object->grantPermission('use project_lifecycle transition mediate');
  $role_object->grantPermission('use project_lifecycle transition complete');
  $role_object->save();

  // Use project transitions for supervisor:
  // Submit - Publish - Mediate - Complete - Reset.
  $role_object = Role::load('supervisor');
  $role_object->grantPermission('use project_lifecycle transition submit');
  $role_object->grantPermission('use project_lifecycle transition publish');
  $role_object->grantPermission('use project_lifecycle transition mediate');
  $role_object->grantPermission('use project_lifecycle transition complete');
  $role_object->grantPermission('use project_lifecycle transition reset');
  $role_object->save();

  // Project transitions to remain in states.
  $roles = ['organization', 'manager', 'supervisor'];
  foreach ($roles as $role) {
    $role_object = Role::load($role);
    $role_object->grantPermission('use project_lifecycle transition remain_draft');
    $role_object->grantPermission('use project_lifecycle transition remain_pending');
    $role_object->grantPermission('use project_lifecycle transition remain_open');
    $role_object->grantPermission('use project_lifecycle transition remain_ongoing');
    $role_object->grantPermission('use project_lifecycle transition remain_completed');
    $role_object->save();
  }

}
