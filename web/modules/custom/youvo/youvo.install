<?php

/**
 * @file
 * Implements install and uninstall hook for youvo base module.
 */

use Drupal\path_alias\Entity\PathAlias;
use Drupal\taxonomy\Entity\Term;
use Drupal\user\Entity\User;

/**
 * Implements hook_site_install_finished().
 *
 * @throws \Drupal\Core\Entity\EntityStorageException
 *
 * @see https://www.drupal.org/project/drupal/issues/2924549
 */
function youvo_site_install_finished(): void {

  // Create taxonomy terms for taxonomy skills.
  $vocabulary = 'skills';
  $terms = [
    1 => [
      'name' => 'Online',
      'description' => 'Website-Anpassungen, Social Media, Online-Marketing – die Digitalisierung bietet neue Chancen.',
      'machine_name' => 'online',
      'weight' => 0,
      'en' => [
        'name' => 'Online',
        'description' => 'Adjustments for the website, social media, online marketing - digitalization offers new possibilities.',
      ],
    ],
    2 => [
      'name' => 'Konzept',
      'description' => 'Wie erreicht man welche Zielgruppe? Mit einem guten Konzept steht und fällt die Öffentlichkeitsarbeit.',
      'machine_name' => 'concept',
      'weight' => 1,
      'en' => [
        'name' => 'Concept',
        'description' => 'How do you reach each target group? With a good concept public relations are improved.',
      ],
    ],
    3 => [
      'name' => 'Text & PR',
      'name_en' => 'Text & PR',
      'description' => 'Blogeintrag, Dokumentation, Slogan oder Flyertext erklären, was die Organisation wirklich macht.',
      'machine_name' => 'text',
      'weight' => 5,
      'en' => [
        'name' => 'Text & PR',
        'description' => 'Blog, documentation, slogan or flyers explain the mission of an organization.',
      ],
    ],
    4 => [
      'name' => 'Design',
      'description' => 'Design, digital oder gedruckt, ist immer gefragt: ob Wireframes, Icons, Logos, Infografiken oder Flyer.',
      'machine_name' => 'design',
      'weight' => 2,
      'en' => [
        'name' => 'Design',
        'description' => 'Design, digital or print, is always requested: wire frames, icons, logos, info graphics or flyers.',
      ],
    ],
    5 => [
      'name' => 'Video',
      'description' => 'Mit einem animierten Erklärfilm oder einem klischeefreien Fundraising-Video eröffnen sich neue Möglichkeiten.',
      'machine_name' => 'video',
      'weight' => 4,
      'en' => [
        'name' => 'Video',
        'description' => 'With an animated film or a fundraising video new possibilities open up.',
      ],
    ],
    6 => [
      'name' => 'Foto',
      'description' => 'Bilder sagen mehr als Worte: egal ob es um Teamfotos, die Dokumentation einer Veranstaltung oder frische Kampagnenmotive geht.',
      'machine_name' => 'photo',
      'weight' => 3,
      'en' => [
        'name' => 'Photo',
        'description' => 'Pictures say more than words: team photos, documentation of an event or fresh campagne motives.',
      ],
    ],
  ];

  foreach ($terms as $tid => $term) {
    $skill = Term::create([
      'parent' => [],
      'name' => $term['name'],
      'tid' => $tid,
      'vid' => $vocabulary,
      'description' => $term['description'],
      'machine_name' => $term['machine_name'],
      'weight' => $term['weight'],
      'langcode' => 'de',
    ]);
    $skill->save();
    $skill_en = $skill->addTranslation('en', $skill->toArray());
    $skill_en->set('name', $term['en']['name']);
    $skill_en->set('description', $term['en']['description']);
    $skill_en->save();
  }

  // Create taxonomy terms for taxonomy causes.
  $vocabulary = 'causes';
  $terms = [
    'Bildung',
    'Entwicklungsarbeit',
    'Integration',
    'Medizin',
    'Umwelt',
    'Zivilgesellschaft',
  ];
  $terms_en = [
    'education',
    'development',
    'integration',
    'medicine',
    'enviroment',
    'civil society',
  ];

  foreach ($terms as $delta => $term) {
    $cause = Term::create([
      'parent' => [],
      'name' => $term,
      'vid' => $vocabulary,
      'langcode' => 'de',
    ]);
    $cause->save();
    $cause_en = $cause->addTranslation('en', $cause->toArray());
    $cause_en->set('name', $terms_en[$delta]);
    $cause_en->save();
  }

  // Load first user and add administrator and creative role.
  $first_user = User::load(1);
  $first_user?->addRole('administrator');
  $first_user?->addRole('manager');
  $first_user?->addRole('creative');
  $first_user?->set('field_name', 'Admira Minelli');
  $first_user?->save();

  // Load anonymous user and add name.
  $anonymous_user = User::load(0);
  $anonymous_user?->set('field_name', 'Anonymous');
  $anonymous_user?->save();

  // Create path aliases for API documentation.
  $path_alias = PathAlias::create([
    'path' => '/admin/config/services/openapi/redoc/jsonapi',
    'alias' => '/apidocs',
  ]);
  $path_alias->save();
}
