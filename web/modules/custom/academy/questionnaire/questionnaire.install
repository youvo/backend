<?php

/**
 * @file
 * Install, update and uninstall functions for the Academy module.
 */

use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\Core\Utility\Error;
use Drupal\paragraphs\Entity\ParagraphType;

/**
 * Implements hook_uninstall().
 */
function questionnaire_uninstall(): void {

  // Remove config entity for questionnaire paragraph type.
  try {
    if ($paragraph_type = \Drupal::entityTypeManager()
      ->getStorage('paragraph_type')
      ->loadByProperties(['id' => 'questionnaire'])) {
      $paragraph_type = reset($paragraph_type);
      if ($paragraph_type instanceof ParagraphType) {
        $paragraph_type->delete();
      }
    }
  }
  catch (InvalidPluginDefinitionException | PluginNotFoundException | EntityStorageException $e) {
    $logger = \Drupal::logger('academy');
    Error::logException($logger, $e, 'Could not delete questionnaire paragraph type during uninstall.');
  }
}

/**
 * Implements hook_schema().
 */
function questionnaire_schema(): array {
  $schema['questionnaire_progress'] = [
    'description' => 'Table description.',
    'fields' => [
      'id' => [
        'type' => 'serial',
        'not null' => TRUE,
        'description' => 'Primary Key: Unique record ID.',
      ],
      'uid' => [
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The {users}.uid of the user who created the record.',
      ],
      'status' => [
        'description' => 'Boolean indicating whether this record is active.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'size' => 'tiny',
      ],
      'type' => [
        'type' => 'varchar_ascii',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
        'description' => 'Type of the record.',
      ],
      'created' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Timestamp when the record was created.',
      ],
      'data' => [
        'type' => 'blob',
        'not null' => TRUE,
        'size' => 'big',
        'description' => 'The arbitrary data for the item.',
      ],
    ],
    'primary key' => ['id'],
    'indexes' => [
      'type' => ['type'],
      'uid' => ['uid'],
      'status' => ['status'],
    ],
  ];

  return $schema;
}
