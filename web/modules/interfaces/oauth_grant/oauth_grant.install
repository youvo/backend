<?php

/**
 * @file
 * Install, update and uninstall functions for the oauth_grant module.
 */

use Drupal\Component\Plugin\Exception\PluginNotFoundException;
use Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException;
use Drupal\consumers\Entity\Consumer;
use Drupal\Core\Entity\EntityStorageException;
use Drupal\user\Entity\Role;
use Drupal\Core\Utility\Error;

/**
 * Implements hook_install().
 */
function oauth_grant_install() {

  // Overwrite simple_oauth settings.
  $config = \Drupal::configFactory()->getEditable('simple_oauth.settings');
  // 1 hour, 2 minutes and 14 days.
  $config->set('access_token_expiration', 3600);
  $config->set('authorization_code_expiration', 120);
  $config->set('refresh_token_expiration', 1209600);
  $config->set('remember_clients', TRUE);
  $config->set('disable_openid_connect', TRUE);
  $config->set('use_implicite', FALSE);
  $config->set('public_key', dirname(DRUPAL_ROOT) . '/certificates/public.key');
  $config->set('private_key', dirname(DRUPAL_ROOT) . '/certificates/private.key');
  $config->save(TRUE);

  try {
    // Delete default consumer.
    $default_consumer = \Drupal::entityTypeManager()
      ->getStorage('consumer')
      ->load(1);
    $default_consumer->delete();

    // Add new Consumer.
    $consumer = Consumer::create([
      'label' => 'youvo Frontend',
      'third_party' => FALSE,
      'is_default' => TRUE,
      'owner_id' => 1,
      'confidential' => TRUE,
      'roles' => [['target_id' => 'creative']],
      'redirect' => 'https://preview.youvo.org/api/auth/callback',
    ]);
    $consumer->save();
  }
  catch (InvalidPluginDefinitionException | PluginNotFoundException | EntityStorageException $e) {
    $variables = Error::decodeException($e);
    \Drupal::logger('youvo')
      ->error('Unable to create consumer. %type: @message in %function (line %line of %file).', $variables);
  }

  try {
    // Grant OAuth2 codes.
    $role_object = Role::load('creative');
    $role_object->grantPermission('grant simple_oauth codes');
    $role_object->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    $variables['%permission'] = 'grant simple_oauth codes';
    $variables['%role'] = 'creative';
    \Drupal::logger('youvo')
      ->error('Unable to grant permission %permission to role %role. %type: @message in %function (line %line of %file).', $variables);
  }
}

/**
 * Implements hook_site_install_finished().
 *
 * @see https://www.drupal.org/project/drupal/issues/2924549
 */
function oauth_grant_site_install_finished() {

  try {
    // @todo Delete later. Or ungrant on production.
    $role_object = Role::load('authenticated');
    $role_object->grantPermission('debug simple_oauth tokens');
    $role_object->save();
    $role_object = Role::load('anonymous');
    $role_object->grantPermission('debug simple_oauth tokens');
    $role_object->save();
  }
  catch (EntityStorageException $e) {
    $variables = Error::decodeException($e);
    $variables['%permission'] = 'debug simple_oauth tokens';
    $variables['%role'] = 'creative';
    \Drupal::logger('youvo')
      ->error('Unable to grant permission %permission to role %role. %type: @message in %function (line %line of %file).', $variables);
  }
}
