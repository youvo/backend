diff --git a/jsonapi_cross_bundles.services.yml b/jsonapi_cross_bundles.services.yml
index db73f9f4709a8ee0ceffc59fc22b186fb517c93f..231e10b5707208b8b5254ec24cbdb4d61fe74d88 100644
--- a/jsonapi_cross_bundles.services.yml
+++ b/jsonapi_cross_bundles.services.yml
@@ -2,6 +2,7 @@ services:
   jsonapi_cross_bundles.cross_bundle_resource_type_repository:
     class: Drupal\jsonapi_cross_bundles\ResourceType\CrossBundleResourceTypeRepository
     public: false
+    decoration_priority: -1
     decorates: jsonapi.resource_type.repository
     arguments:
       - '@jsonapi_cross_bundles.cross_bundle_resource_type_repository.inner'
diff --git a/src/ResourceType/CrossBundleResourceTypeRepository.php b/src/ResourceType/CrossBundleResourceTypeRepository.php
index db729466442062adeba7e35f890b6fe63fb22c42..010b6ffa1e4b6d6b841593ecaa119a8a76f44d62 100644
--- a/src/ResourceType/CrossBundleResourceTypeRepository.php
+++ b/src/ResourceType/CrossBundleResourceTypeRepository.php
@@ -102,7 +102,7 @@ class CrossBundleResourceTypeRepository implements ResourceTypeRepositoryInterfa
         // If none of the bundle-specific resource types is locatable, the
         // cross-bundle resource type should not be locatable.
         $at_least_one_is_locatable = array_reduce($resource_types, function ($at_least_one_is_locatable, ResourceType $resource_type) {
-          return $at_least_one_is_locatable ?: $resource_type->isLocatable();
+          return $at_least_one_is_locatable ?: $resource_type->isLocatable() && !$resource_type->isInternal();
         }, FALSE);
         $field_mapping_superset = static::getFieldMappingSuperset(array_map(function (ResourceType $resource_type) use ($entity_type) {
           return $this->shim->getFields(
