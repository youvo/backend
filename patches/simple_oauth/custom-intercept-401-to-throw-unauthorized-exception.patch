diff --git a/modules/contrib/simple_oauth/src/Authentication/Provider/SimpleOauthAuthenticationProvider.php b/modules/contrib/simple_oauth/src/Authentication/Provider/SimpleOauthAuthenticationProvider.php
index b55b3ce..9a06b23 100644
--- a/modules/contrib/simple_oauth/src/Authentication/Provider/SimpleOauthAuthenticationProvider.php
+++ b/modules/contrib/simple_oauth/src/Authentication/Provider/SimpleOauthAuthenticationProvider.php
@@ -2,6 +2,7 @@

 namespace Drupal\simple_oauth\Authentication\Provider;

+use Drupal\Component\Render\FormattableMarkup;
 use Drupal\Core\Authentication\AuthenticationProviderInterface;
 use Drupal\Core\Entity\EntityTypeManagerInterface;
 use Drupal\simple_oauth\Authentication\TokenAuthUser;
@@ -10,6 +11,7 @@
 use League\OAuth2\Server\Exception\OAuthServerException;
 use Symfony\Component\HttpFoundation\Request;
 use Symfony\Component\HttpKernel\Exception\HttpException;
+use Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException;

 /**
  * @internal
@@ -75,6 +77,23 @@ public function authenticate(Request $request) {
       $auth_request = $this->resourceServer->validateAuthenticatedRequest($request);
     }
     catch (OAuthServerException $exception) {
+
+      // Intercept 401 to throw unauthorized exception.
+      if ($exception->getHttpStatusCode() == 401) {
+        $error = match ($exception->getHint()) {
+          'Access token could not be verified' => 'token_invalid',
+          'Access token has been revoked' => 'token_revoked',
+          default => 'access_denied',
+        };
+        $challenge = new FormattableMarkup('Bearer realm="OAuth", error="@error", error_description="@hint"',
+          ['@error' => $error, '@hint' => $exception->getHint()]);
+        throw new UnauthorizedHttpException(
+          $challenge,
+          $exception->getMessage(),
+          $exception
+        );
+      }
+
       // Procedural code here is hard to avoid.
       watchdog_exception('simple_oauth', $exception);
